// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package translations

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"de_DE": &dictionary{index: de_DEIndex, data: de_DEData},
		"en_GB": &dictionary{index: en_GBIndex, data: en_GBData},
		"fr_CH": &dictionary{index: fr_CHIndex, data: fr_CHData},
	}
	fallback := language.MustParse("en-GB")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"%d books available": 2,
	"Launching soon!":    3,
	"Welcome!":           0,
	"Welcome: %s!":       1,
}

var de_DEIndex = []uint32{ // 5 elements
	0x00000000, 0x0000000c, 0x0000001f, 0x00000058,
	0x00000069,
} // Size: 44 bytes

const de_DEData string = "" + // Size: 105 bytes
	"\x02Willkommen!\x02Willkommen: %[1]s!\x14\x01\x81\x01\x00=\x01\x15\x02Ei" +
	"n Buch erhältlich\x00\x1a\x02%[1]d Bücher erhältlich\x02Bald verfügbar!"

var en_GBIndex = []uint32{ // 5 elements
	0x00000000, 0x00000009, 0x00000019, 0x0000004c,
	0x0000005c,
} // Size: 44 bytes

const en_GBData string = "" + // Size: 92 bytes
	"\x02Welcome!\x02Welcome: %[1]s!\x14\x01\x81\x01\x00=\x01\x13\x02One book" +
	" available\x00\x16\x02%[1]d books available\x02Launching soon!"

var fr_CHIndex = []uint32{ // 5 elements
	0x00000000, 0x0000000c, 0x0000001e, 0x00000055,
	0x0000006b,
} // Size: 44 bytes

const fr_CHData string = "" + // Size: 107 bytes
	"\x02Bienvenue !\x02Bienvenue: %[1]s!\x14\x01\x81\x01\x00=\x01\x14\x02Un " +
	"livre disponible\x00\x19\x02%[1]d livres disponibles\x02Bientôt disponib" +
	"le !"

	// Total table size 436 bytes (0KiB); checksum: 540BCBB1
